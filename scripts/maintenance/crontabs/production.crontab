# Production crontab configuration for Cloud Infrastructure Platform
# Paths configured for production deployment

CLOUD_PLATFORM_ROOT=/opt/cloud-platform
LOG_DIR=/var/log/cloud-platform
PYTHON_ENV=/opt/cloud-platform/venv/bin/python
FLASK_ENV=production

# System maintenance
# Rotate logs daily at 2:15 AM
15 2 * * * ${CLOUD_PLATFORM_ROOT}/scripts/rotate_logs.sh >> ${LOG_DIR}/cron.log 2>&1

# Database backup daily at 3:00 AM with rotation
0 3 * * * ${CLOUD_PLATFORM_ROOT}/scripts/backup_db.sh >> ${LOG_DIR}/cron.log 2>&1

# Weekly full backup on Sunday at 2:00 AM
0 2 * * 0 ${CLOUD_PLATFORM_ROOT}/scripts/backup_db.sh --full >> ${LOG_DIR}/cron.log 2>&1

# Daily backup verification without restore testing
0 3 * * * /opt/cloud-platform/scripts/database/verify-backups.sh --environment production --notify admin@example.com >> /var/log/cloud-platform/cron.log 2>&1

# Weekly backup verification with restore testing (Sunday at 2 AM)
0 2 * * 0 /opt/cloud-platform/scripts/database/verify-backups.sh --environment production --restore-test --notify admin@example.com >> /var/log/cloud-platform/cron.log 2>&1

# Monthly verification of all environments (1st of month)
0 4 1 * * /opt/cloud-platform/scripts/database/verify-backups.sh --all-environments --notify admin@example.com >> /var/log/cloud-platform/cron.log 2>&1

# Security checks
# Verify file integrity every hour
0 * * * * ${PYTHON_ENV} ${CLOUD_PLATFORM_ROOT}/scripts/verify_files.py >> ${LOG_DIR}/security.log 2>&1

# Run security audit daily at 4:00 AM
0 4 * * * ${PYTHON_ENV} ${CLOUD_PLATFORM_ROOT}/scripts/security_audit.py >> ${LOG_DIR}/security.log 2>&1

# Check for security updates daily at 6:00 AM
0 6 * * * ${CLOUD_PLATFORM_ROOT}/scripts/check_security_updates.sh >> ${LOG_DIR}/security.log 2>&1

# Monitoring and metrics
# Export metrics every 15 minutes
*/15 * * * * ${PYTHON_ENV} ${CLOUD_PLATFORM_ROOT}/scripts/export_metrics.py --format=prometheus --output=${LOG_DIR}/metrics/$(date +\%Y\%m\%d_\%H\%M).prom >> ${LOG_DIR}/cron.log 2>&1

# API latency monitoring every 5 minutes
*/5 * * * * ${CLOUD_PLATFORM_ROOT}/scripts/monitoring/api_latency.sh --format prometheus --quiet --environment production >> ${LOG_DIR}/api_latency.log 2>&1

# Generate daily reports at 5:00 AM
0 5 * * * cd ${CLOUD_PLATFORM_ROOT} && FLASK_ENV=${FLASK_ENV} ${PYTHON_ENV} -m flask reports generate-daily >> ${LOG_DIR}/cron.log 2>&1

# Generate weekly reports on Monday at 6:00 AM
0 6 * * 1 cd ${CLOUD_PLATFORM_ROOT} && FLASK_ENV=${FLASK_ENV} ${PYTHON_ENV} -m flask reports generate-weekly >> ${LOG_DIR}/cron.log 2>&1

# Maintenance
# Clean up temporary files daily at 1:00 AM (files older than 24 hours)
0 1 * * * find ${CLOUD_PLATFORM_ROOT}/instance/temporary -type f -mtime +1 -delete >> ${LOG_DIR}/cron.log 2>&1

# Clean up expired sessions daily at 1:30 AM
30 1 * * * cd ${CLOUD_PLATFORM_ROOT} && FLASK_ENV=${FLASK_ENV} ${PYTHON_ENV} -m flask sessions cleanup >> ${LOG_DIR}/cron.log 2>&1

# Archive audit logs weekly (Sunday at 3:00 AM)
0 3 * * 0 ${CLOUD_PLATFORM_ROOT}/scripts/archive_audit_logs.sh >> ${LOG_DIR}/cron.log 2>&1