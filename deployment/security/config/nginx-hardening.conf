# NGINX Security Hardening Configuration for Cloud Infrastructure Platform
# This configuration should be included in the main NGINX server block

# Hide NGINX version information
server_tokens off;

# Enable HTTP Strict Transport Security (HSTS)
add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

# Set secure Content Security Policy (CSP)
add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'nonce-${CSP_NONCE}' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; img-src 'self' data:; font-src 'self' https://cdn.jsdelivr.net; connect-src 'self'; frame-ancestors 'none'; form-action 'self'; base-uri 'self'; object-src 'none'; upgrade-insecure-requests;" always;

# Prevent clickjacking attacks
add_header X-Frame-Options "DENY" always;

# Prevent MIME type sniffing
add_header X-Content-Type-Options "nosniff" always;

# Configure Cross-site scripting (XSS) Protection
add_header X-XSS-Protection "1; mode=block" always;

# Set referrer policy
add_header Referrer-Policy "strict-origin-when-cross-origin" always;

# Set permissions policy (formerly feature policy)
add_header Permissions-Policy "geolocation=(), camera=(), microphone=(), payment=(), usb=(), interest-cohort=(), accelerometer=(), gyroscope=(), magnetometer=(), face=(), ambient-light-sensor=()" always;

# Ensure headers are added for all response codes
map $status $always_add_headers {
    default 1;
}

# Configure SSL/TLS settings
ssl_protocols TLSv1.2 TLSv1.3;
ssl_prefer_server_ciphers on;
ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
ssl_ecdh_curve secp384r1;
ssl_session_cache shared:SSL:10m;
ssl_session_timeout 1d;
ssl_session_tickets off;
ssl_stapling on;
ssl_stapling_verify on;
resolver 1.1.1.1 1.0.0.1 valid=300s;
resolver_timeout 5s;
ssl_buffer_size 4k;

# Early data can lead to replay attacks, disable it
ssl_early_data off;

# Buffer size for POST submissions
client_body_buffer_size 16k;
client_header_buffer_size 1k;
client_max_body_size 10m;
large_client_header_buffers 4 16k;

# Timeouts
client_body_timeout 15s;
client_header_timeout 15s;
keepalive_timeout 65s;
send_timeout 15s;

# File access restrictions
location ~ /\.(?!well-known) {
    deny all;
    return 404;
}

# Disable directory listing
autoindex off;

# Protect against slow HTTP attacks
limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=10r/s;
limit_req zone=req_limit_per_ip burst=20 nodelay;
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
limit_conn conn_limit_per_ip 20;

# Rate limit error responses by client
limit_req_status 429;
limit_conn_status 429;

# Disable access to sensitive files
location ~ \.(bak|conf|dist|ini|log|sh|sql|swp|yml|env)$ {
    deny all;
    return 404;
}

# Cache control for static assets
location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
    expires 30d;
    add_header Cache-Control "public, no-transform";
}

# Security headers for API endpoints
location /api/ {
    add_header Content-Security-Policy "default-src 'none'; frame-ancestors 'none'" always;
    proxy_pass http://backend_api;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}

# Rate limiting configuration
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/s;

# Apply rate limiting to login and API endpoints
location ~ ^/(login|api/auth) {
    limit_req zone=login burst=10 nodelay;
    proxy_pass http://backend_api;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
}

location ~ ^/api/ {
    limit_req zone=api burst=20;
    proxy_pass http://backend_api;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
}

# ModSecurity configuration
modsecurity on;
modsecurity_rules_file /etc/nginx/modsecurity.d/modsecurity-rules.conf;

# Enable TLS 1.3 0-RTT (use with caution - only for non-sensitive operations)
# ssl_early_data on;
# proxy_set_header Early-Data $ssl_early_data;

# Security headers for static file server
location /static/ {
    add_header Cache-Control "public, max-age=31536000, immutable";
    try_files $uri =404;
}

# Protection for admin endpoints
location /admin/ {
    # IP restriction - adjust to your secure management IPs
    # allow 10.0.0.0/8;
    # deny all;
    
    auth_request /auth/admin;
    auth_request_set $auth_status $upstream_status;
    
    limit_req zone=api burst=5 nodelay;
    proxy_pass http://backend_api;
}

# Monitoring endpoint security
location /metrics {
    # Restrict access to monitoring systems
    allow 127.0.0.1;
    allow 10.0.0.0/8;
    deny all;
    
    proxy_pass http://backend_api;
}

# Custom error pages
error_page 403 /error/403.html;
error_page 404 /error/404.html;
error_page 500 502 503 504 /error/5xx.html;

# Internal location for auth requests
location = /auth/admin {
    internal;
    proxy_pass http://backend_api/auth/verify_admin;
    proxy_pass_request_body off;
    proxy_set_header Content-Length "";
    proxy_set_header X-Original-URI $request_uri;
}
