# NGINX Security Hardening Configuration for Cloud Infrastructure Platform
# This configuration should be included in the main NGINX server block

# Hide NGINX version information
server_tokens off;

# Enable HTTP Strict Transport Security (HSTS)
add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload" always;

# Set secure Content Security Policy (CSP)
add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'nonce-${CSP_NONCE}' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; img-src 'self' data:; font-src 'self' https://cdn.jsdelivr.net; connect-src 'self'; frame-ancestors 'none'; form-action 'self'; base-uri 'self'; object-src 'none';" always;

# Prevent clickjacking attacks
add_header X-Frame-Options "DENY" always;

# Prevent MIME type sniffing
add_header X-Content-Type-Options "nosniff" always;

# Configure Cross-site scripting (XSS) Protection
add_header X-XSS-Protection "1; mode=block" always;

# Set referrer policy
add_header Referrer-Policy "strict-origin-when-cross-origin" always;

# Set permissions policy (formerly feature policy)
add_header Permissions-Policy "geolocation=(), camera=(), microphone=(), payment=(), usb=(), accelerometer=(), gyroscope=()" always;

# Configure SSL/TLS settings
ssl_protocols TLSv1.2 TLSv1.3;
ssl_prefer_server_ciphers on;
ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
ssl_ecdh_curve secp384r1;
ssl_session_cache shared:SSL:10m;
ssl_session_timeout 10m;
ssl_session_tickets off;
ssl_stapling on;
ssl_stapling_verify on;

# Buffer size for POST submissions
client_body_buffer_size 10K;
client_header_buffer_size 1k;
client_max_body_size 10m;
large_client_header_buffers 2 1k;

# Timeouts
client_body_timeout 12;
client_header_timeout 12;
keepalive_timeout 15;
send_timeout 10;

# Set secure paths for sensitive resources
location ~ /\.(?!well-known) {
    deny all;
    return 404;
}

# Disable access to sensitive files
location ~ \.(bak|conf|dist|ini|log|sh|sql|swp|yml|env)$ {
    deny all;
    return 404;
}

# Cache control for static assets
location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
    expires 30d;
    add_header Cache-Control "public, no-transform";
}

# Security headers for API endpoints
location /api/ {
    add_header Content-Security-Policy "default-src 'none'; frame-ancestors 'none'" always;
    proxy_pass http://backend_api;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}

# Rate limiting configuration
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/s;

# Apply rate limiting to login and API endpoints
location ~ ^/(login|api/auth) {
    limit_req zone=login burst=10 nodelay;
    proxy_pass http://backend_api;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
}

location ~ ^/api/ {
    limit_req zone=api burst=20;
    proxy_pass http://backend_api;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
}
