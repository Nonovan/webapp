# ICS-PROTECTION.CONF
# Web Application Firewall rules for Industrial Control System protection
# These rules protect ICS-related endpoints against specific attack vectors

# Block known ICS protocol exploitation attempts
SecRule REQUEST_URI "@rx ^/api/ics/" \
    "id:140001,phase:1,t:none,log,msg:'ICS API Access Logging',pass,ctl:auditEngine=On,ctl:auditLogParts=+E"

# Block protocol-specific attacks (Modbus, DNP3, OPC-UA, etc.)
SecRule REQUEST_URI "@rx ^/api/ics/modbus" \
    "chain,id:140002,phase:2,t:none,block,log,msg:'Modbus Protocol Injection Attempt'"
SecRule REQUEST_BODY "@rx (?:function_code=[^0-9]|register=[^0-9]|coil=[^0-9]|force_coil|force_register)" \
    "t:none,t:urlDecodeUni,t:lowercase"

SecRule REQUEST_URI "@rx ^/api/ics/dnp3" \
    "chain,id:140003,phase:2,t:none,block,log,msg:'DNP3 Protocol Injection Attempt'"
SecRule REQUEST_BODY "@rx (?:control_relay|analog_output|function_code=[^0-9]|data_link_layer|app_layer_fragment)" \
    "t:none,t:urlDecodeUni,t:lowercase"

SecRule REQUEST_URI "@rx ^/api/ics/opcua" \
    "chain,id:140004,phase:2,t:none,block,log,msg:'OPC-UA Protocol Injection Attempt'"
SecRule REQUEST_BODY "@rx (?:node_id=\\\"|\\\"|;|<|>|\\\\')" \
    "t:none,t:urlDecodeUni"

# Block known ICS exploit patterns
SecRule REQUEST_URI|ARGS|REQUEST_BODY "@rx (?:scada|modbus|dnp3|bacnet|iec61850|ethernetip|profinet)" \
    "chain,id:140005,phase:2,t:none,t:lowercase,log,pass"
SecRule REQUEST_URI|ARGS|REQUEST_BODY "@rx (?:overflow|inject|exploit|abuse|forced|unauthorized|takeover)" \
    "t:none,t:lowercase,block,log,msg:'ICS Exploit Keywords Detected'"

# Block attempts to access sensitive ICS functions
SecRule REQUEST_URI "@rx ^/api/ics/(control|write|set|update)" \
    "chain,id:140006,phase:2,t:none,pass"
SecRule &REQUEST_HEADERS:X-ICS-Authorization "@eq 0" \
    "chain,t:none"
SecRule &REQUEST_HEADERS:X-ICS-Operation-Token "@eq 0" \
    "t:none,block,log,msg:'Missing ICS Authorization for Control Operation'"

# Block invalid value ranges for ICS parameters
SecRule ARGS:temperature "@gt 100" \
    "id:140007,phase:2,t:none,block,log,msg:'ICS Parameter Out of Range: Temperature'"

SecRule ARGS:pressure "@gt 10" \
    "id:140008,phase:2,t:none,block,log,msg:'ICS Parameter Out of Range: Pressure'"

SecRule ARGS:flow_rate "@gt 1000" \
    "id:140009,phase:2,t:none,block,log,msg:'ICS Parameter Out of Range: Flow Rate'"

SecRule ARGS:speed "@gt 3000" \
    "id:140010,phase:2,t:none,block,log,msg:'ICS Parameter Out of Range: Speed'"

# Block rapid-fire ICS commands (prevents command flooding)
SecRule REQUEST_URI "@rx ^/api/ics/(control|command)" \
    "id:140011,phase:1,t:none,nolog,pass,setvar:ip.ics_command_count=+1,expirevar:ip.ics_command_count=60"

SecRule IP:ICS_COMMAND_COUNT "@gt 10" \
    "id:140012,phase:1,t:none,block,log,msg:'ICS Command Flooding Detected'"

# Block suspicious sequences of ICS operations
SecRule REQUEST_URI "@rx ^/api/ics/control/(start|on)" \
    "chain,id:140013,phase:5,t:none,t:lowercase,pass,setvar:ip.last_ics_command=start,expirevar:ip.last_ics_command=300"
SecRule IP:LAST_ICS_COMMAND "@streq stop" \
    "t:none,setvar:ip.rapid_restart_count=+1,expirevar:ip.rapid_restart_count=600"

SecRule IP:RAPID_RESTART_COUNT "@gt 3" \
    "id:140014,phase:1,t:none,block,log,msg:'Suspicious ICS Operation Sequence: Rapid Start/Stop Cycles'"

# Prevent access to legacy/unsupported ICS protocols
SecRule REQUEST_URI "@rx ^/api/ics/(legacy|unsupported)" \
    "id:140015,phase:1,t:none,block,log,msg:'Access to Deprecated/Unsupported ICS Protocol'"

# Disallow unusual HTTP methods for ICS endpoints
SecRule REQUEST_URI "@rx ^/api/ics/" \
    "chain,id:140016,phase:1,t:none,pass"
SecRule REQUEST_METHOD "!@rx ^(GET|POST|PUT)$" \
    "t:none,block,log,msg:'Unusual HTTP Method for ICS Endpoint'"

# Block attempts to use ICS simulator in production
SecRule REQUEST_URI "@rx ^/api/ics/simulator" \
    "chain,id:140017,phase:1,t:none,pass"
SecRule REMOTE_ADDR "!@ipMatch 127.0.0.1,::1,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16" \
    "t:none,block,log,msg:'External Access to ICS Simulator'"

# Prevent ICS information disclosure
SecRule RESPONSE_BODY "@rx (?:PLC model|firmware version|ICS device|control system|SCADA|device serial)" \
    "id:140018,phase:4,t:none,t:lowercase,block,log,msg:'ICS Information Disclosure'"

# Advanced signature-based protection against known ICS exploits
SecRule REQUEST_URI|REQUEST_HEADERS|ARGS|REQUEST_BODY "@pmFromFile ics-exploit-signatures.dat" \
    "id:140019,phase:2,t:none,block,log,msg:'Known ICS Exploit Signature Detected'"

# Block potential ICS configuration manipulation
SecRule REQUEST_URI "@rx ^/api/ics/config" \
    "chain,id:140020,phase:1,t:none,pass"
SecRule REQUEST_METHOD "!@rx ^GET$" \
    "chain,t:none"
SecRule &REQUEST_HEADERS:X-Config-Token "@eq 0" \
    "t:none,block,log,msg:'Unauthorized ICS Configuration Modification Attempt'"

# Restrict access to safety-critical operations
SecRule REQUEST_URI "@rx ^/api/ics/safety/" \
    "id:140021,phase:1,t:none,block,log,msg:'Access to Safety-Critical ICS Functions'"

# Enforce parameter type checking
SecRule REQUEST_URI "@rx ^/api/ics/params" \
    "chain,id:140022,phase:2,t:none,pass"
SecRule ARGS:value "!@rx ^[0-9]+(\\.[0-9]+)?$" \
    "t:none,block,log,msg:'Non-numeric Value for ICS Parameter'"

# Enforce mandatory parameters for control operations
SecRule REQUEST_URI "@rx ^/api/ics/control" \
    "chain,id:140023,phase:2,t:none,pass"
SecRule &ARGS:operation_id "@eq 0" \
    "t:none,block,log,msg:'Missing Required Operation ID'"

# Prevent concurrent operations on same device
SecRule REQUEST_URI "@rx ^/api/ics/device/([0-9]+)/control" \
    "chain,id:140024,phase:1,t:none,capture,nolog,pass,setvar:tx.device_id=%{TX.1}"
SecRule TX:DEVICE_ID "@rx ^[0-9]+$" \
    "chain,t:none"
SecRule TX:DEVICE_ID "!@streq ''" \
    "t:none,setvar:ip.ics_device_%{TX.device_id}=+1,expirevar:ip.ics_device_%{TX.device_id}=10"

SecRule IP:ICS_DEVICE_* "@gt 1" \
    "id:140025,phase:1,t:none,block,log,msg:'Concurrent Operations on Same ICS Device'"

# Prevent access to unauthorized devices (IP-based restrictions)
SecRule REQUEST_URI "@rx ^/api/ics/device/([0-9]+)" \
    "chain,id:140026,phase:1,t:none,capture,nolog,pass"
SecRule TX:1 "@rx ^(1|2|3|4|5)$" \
    "chain,t:none"
SecRule REMOTE_ADDR "!@ipMatch ${ICS_RESTRICTED_IPS}" \
    "t:none,block,log,msg:'Unauthorized Access to Restricted ICS Device'"

# Block ICS parameter manipulation attacks
SecRule REQUEST_URI "@rx ^/api/ics/" \
    "chain,id:140027,phase:2,t:none,pass"
SecRule REQUEST_BODY|ARGS "@rx (?:[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F])" \
    "t:none,block,log,msg:'Control Characters in ICS Parameters'"

# Time-of-day restrictions for critical ICS operations
SecRule REQUEST_URI "@rx ^/api/ics/critical/" \
    "chain,id:140028,phase:1,t:none,pass"
SecRule TIME:HOUR "@gt 17" \
    "chain,t:none"
SecRule TIME:HOUR "@lt 9" \
    "t:none,block,log,msg:'Critical ICS Operations Only Allowed During Business Hours (9-18)'"

# Verify ICS operation sequence
SecRule REQUEST_URI "@beginsWith /api/ics/control/start" \
    "chain,id:140029,phase:1,t:none,pass,setvar:!ip.ics_initialized"
SecRule IP:ICS_INITIALIZED "!@eq 1" \
    "t:none,setvar:ip.ics_initialized=1,expirevar:ip.ics_initialized=3600"

SecRule REQUEST_URI "@rx ^/api/ics/control/(process|run)" \
    "chain,id:140030,phase:1,t:none,pass"
SecRule IP:ICS_INITIALIZED "!@eq 1" \
    "t:none,block,log,msg:'Invalid ICS Operation Sequence - Initialize System First'"

# Enforce mutual authentication for secure ICS endpoints
SecRule REQUEST_URI "@rx ^/api/ics/secure/" \
    "chain,id:140031,phase:1,t:none,pass"
SecRule &REQUEST_HEADERS:X-ICS-Client-Cert "@eq 0" \
    "t:none,block,log,msg:'Mutual Authentication Required for Secure ICS Operations'"

# Block operations from non-approved networks
SecRule REQUEST_URI "@rx ^/api/ics/operations" \
    "chain,id:140032,phase:1,t:none,pass"
SecRule REMOTE_ADDR "!@ipMatch 10.10.0.0/16,10.20.0.0/16,192.168.10.0/24" \
    "t:none,block,log,msg:'ICS Operations Only Allowed from Approved Networks'"

# Block potentially malicious ICS commands
SecRule REQUEST_BODY|ARGS "@rx (?i:shutdown|reboot|reset|factory[\s-_]*reset|update[\s-_]*firmware)" \
    "id:140033,phase:2,t:none,t:lowercase,block,log,msg:'Potentially Dangerous ICS Command'"

# Block SCADA HMI manipulation attempts
SecRule REQUEST_URI "@rx ^/api/ics/hmi/" \
    "chain,id:140034,phase:1,t:none,pass"
SecRule REQUEST_METHOD "!@rx ^GET$" \
    "chain,t:none" 
SecRule &REQUEST_HEADERS:X-HMI-Write-Token "@eq 0" \
    "t:none,block,log,msg:'Unauthorized HMI Modification Attempt'"

# Verify data integrity for ICS control messages
SecRule &REQUEST_HEADERS:X-ICS-Checksum "@eq 0" \
    "chain,id:140035,phase:2,t:none,pass"
SecRule REQUEST_URI "@beginsWith /api/ics/control" \
    "t:none,block,log,msg:'Missing ICS Data Integrity Checksum'"

# Exception for internal monitoring systems
SecRule REMOTE_ADDR "@ipMatch 10.50.0.0/16" \
    "chain,id:140050,phase:1,t:none,nolog,pass"
SecRule &REQUEST_HEADERS:X-Monitoring-Token "@eq 1" \
    "chain,t:none"
SecRule REQUEST_HEADERS:X-Monitoring-Token "@rx ^[a-f0-9]{64}$" \
    "t:none,ctl:ruleRemoveById=140011,ctl:ruleRemoveById=140012"

# Exception for approved maintenance operations
SecRule REQUEST_URI "@rx ^/api/ics/maintenance" \
    "chain,id:140051,phase:1,t:none,nolog,pass"
SecRule &REQUEST_HEADERS:X-Maintenance-Key "@eq 1" \
    "chain,t:none"
SecRule REQUEST_HEADERS:X-Maintenance-Key "@rx ^[a-f0-9]{128}$" \
    "chain,t:none"
SecRule REMOTE_ADDR "@ipMatch 10.100.0.0/16" \
    "t:none,ctl:ruleRemoveById=140007,ctl:ruleRemoveById=140008,ctl:ruleRemoveById=140009,ctl:ruleRemoveById=140010"

# Exception for emergency operations
SecRule &REQUEST_HEADERS:X-Emergency-Override "@eq 1" \
    "chain,id:140052,phase:1,t:none,nolog,pass"
SecRule REQUEST_HEADERS:X-Emergency-Override "@rx ^[a-f0-9]{256}$" \
    "chain,t:none"
SecRule REMOTE_ADDR "@ipMatch 10.200.1.0/24" \
    "t:none,skipAfter:END_ICS_PROTECTION_RULES"

# Add special logging for all exceptions
SecRule REQUEST_URI "@rx ^/api/ics/" \
    "chain,id:140053,phase:5,t:none,pass,nolog"
SecRule &REQUEST_HEADERS:X-Emergency-Override "@eq 1" \
    "t:none,exec:/opt/cloud-platform/scripts/log_emergency_override.sh %{REMOTE_ADDR} %{REQUEST_URI}"

SecMarker END_ICS_PROTECTION_RULES

# Log all ICS actions regardless of exception status - ensure compliance auditing
SecRule REQUEST_URI "@rx ^/api/ics/" \
    "id:140099,phase:5,t:none,pass,log,msg:'ICS Action: %{REQUEST_METHOD} %{REQUEST_URI}'"