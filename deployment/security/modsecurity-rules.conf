# ModSecurity Core Rule Set (CRS) configuration for Cloud Infrastructure Platform
# This file configures ModSecurity Web Application Firewall rules

# Basic setup
SecRuleEngine On
SecRequestBodyAccess On
SecResponseBodyAccess On
SecResponseBodyMimeType text/plain text/html text/xml application/json
SecResponseBodyLimit 1048576

# Default action settings
SecDefaultAction "phase:1,log,auditlog,deny,status:403"

# Request body limits
SecRequestBodyLimit 10485760
SecRequestBodyNoFilesLimit 131072

# File upload handling
SecUploadDir /tmp
SecUploadKeepFiles Off
SecUploadFileMode 0600

# Rule sets
Include /etc/nginx/modsecurity-crs/crs-setup.conf
Include /etc/nginx/modsecurity-crs/rules/*.conf

# Custom rules for Cloud Infrastructure Platform

# Block common web attacks
SecRule REQUEST_URI "@rx (?:\.{2}[\\/]){2}" \
    "id:1001,phase:1,t:none,log,deny,status:403,msg:'Directory Traversal Attack'"

SecRule REQUEST_HEADERS:User-Agent "@pmFromFile malicious-user-agents.txt" \
    "id:1002,phase:1,t:none,log,deny,status:403,msg:'Malicious User Agent'"

# Block sensitive file access
SecRule REQUEST_URI "@rx \.(env|git|conf|bak|log|sql)$" \
    "id:1003,phase:1,t:none,log,deny,status:403,msg:'Attempted access to sensitive file'"

# Block SQL injection attempts
SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|REQUEST_COOKIES_NAMES "@rx (?i:(?:\b(?:(?:s(?:elect\b(?:.{1,100}?\b(?:(?:length|count|top)\b.{1,100}?\bfrom|from\b.{1,100}?\bwhere)|.*?\b(?:d(?:ump\b.*\bfrom|ata_type)|(?:to_(?:numbe|cha)|inst)r))|p_(?:(?:addextendedpro|sqlexe)c|(?:oacreat|prepar)e|execute(?:sql)?|makewebtask)|ql_(?:longvarchar|variant))|(?:master\.\.sysdatabases|msysaccessobjects|msysqueries|sysfiles)|m(?:ysql(?:\.exe|admin)|s(?:ys(?:relationship|objects|process)|(?:QLexecute|aster\.\.sysprocess)es)))\b|(?:;.{0,5000}?\b(?:(?:c(?:reate|all)\b|load\b.{0,100}?\binfile\b|(?:insert|exec)\b.{0,100}?\binto\b|union\b.{0,100}?\bselect\b)|(?:declare.{0,100}?\@|select.{0,100}?\w{1,100}\b.{0,100}?\bfrom))|(?:c(?:onnection_id|urrent_user)|system_user)(?:\s|%20)*\()|(?:;\s*?(?:(?:(?:trunc|cre|upd)ate|alter)\s.{0,100}?\btable\b|drop\s|exec\b|load\s*?data\b))|(?:;.*?(?:(?:driv|rid)er\s|scan\b)|;.*?\bw(?:afi|rite)\b|;\s*?\bexec\b))|select.{0,100}?\[.*?\])" \
    "id:1004,phase:2,t:none,log,deny,status:403,msg:'SQL Injection Attempt'"

# Block XSS attempts
SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|REQUEST_COOKIES_NAMES "@rx (?i:<script.*?>|<.*?javascript:|<.*?onmouseover=|\balert\s*\(|document\.cookie)" \
    "id:1005,phase:2,t:none,log,deny,status:403,msg:'XSS Attempt'"

# Restrict HTTP methods
SecRule REQUEST_METHOD "!@rx ^(?:GET|HEAD|POST|PUT|DELETE)$" \
    "id:1006,phase:1,t:none,log,deny,status:405,msg:'Method Not Allowed'"

# Specific protection for Cloud Infrastructure Platform API endpoints
SecRule REQUEST_URI "@beginsWith /api/security/" \
    "id:2001,phase:1,pass,nolog,ctl:ruleRemoveTargetById=1004;ARGS:description"

SecRule REQUEST_URI "@beginsWith /api/ics/control" \
    "id:2002,phase:1,t:none,log,auditlog,chain"
SecRule &REQUEST_HEADERS:X-API-Key "@eq 0" \
    "t:none,deny,status:403,msg:'API Key Required for ICS Control'"

# Rate limiting for authentication endpoints
SecRule REQUEST_URI "@rx ^/api/auth/(login|token)" \
    "id:3001,phase:1,t:none,nolog,pass,setvar:ip.auth_attempt=+1,expirevar:ip.auth_attempt=60"

SecRule IP:AUTH_ATTEMPT "@gt 10" \
    "id:3002,phase:1,t:none,log,deny,status:429,msg:'Authentication Rate Limit Exceeded'"

# Rate limiting for registration endpoints
SecRule REQUEST_URI "@rx ^/api/auth/register" \
    "id:3003,phase:1,t:none,nolog,pass,setvar:ip.register_attempt=+1,expirevar:ip.register_attempt=3600"

SecRule IP:REGISTER_ATTEMPT "@gt 3" \
    "id:3004,phase:1,t:none,log,deny,status:429,msg:'Registration Rate Limit Exceeded'"

# Protection against path traversal in file access endpoints
SecRule REQUEST_URI "@beginsWith /api/files" \
    "id:4001,phase:1,t:none,chain"
SecRule ARGS:path "@rx (?:\.\.|%2e%2e)" \
    "t:none,t:urlDecodeUni,log,deny,status:403,msg:'Path Traversal Attempt in File Access'"

# Protection for cloud provider credentials
SecRule REQUEST_URI "@rx ^/api/cloud/(aws|azure|gcp)" \
    "id:4002,phase:2,t:none,chain"
SecRule REQUEST_BODY "@rx (key|secret|credential|password|token)" \
    "t:none,log,auditlog,pass,ctl:ruleRemoveTargetByTag=OWASP_CRS;ARGS:request_body"

# Protection for admin operations
SecRule REQUEST_METHOD "!@rx ^GET$" \
    "chain,id:5001,phase:1,t:none,nolog,pass"
SecRule REQUEST_URI "@rx ^/api/admin" \
    "chain,t:none"
SecRule &REQUEST_HEADERS:X-CSRF-Token "@eq 0" \
    "t:none,log,deny,status:403,msg:'CSRF Token Required for Admin Operations'"

# JSON body inspection
SecRule REQUEST_HEADERS:Content-Type "@contains application/json" \
    "id:6001,phase:1,t:none,pass,nolog,ctl:requestBodyProcessor=JSON"

SecRule REQUEST_BODY "@rx (?:((\\'|\\\")?__proto__(\\\'|\\\")?)|((\\'|\\\")?constructor(\\\'|\\\")?))" \
    "id:6002,phase:2,t:none,t:lowercase,log,deny,status:403,msg:'Prototype Pollution Attack'"

# Specific rules for ICS (Industrial Control System) protection
SecRule REQUEST_URI "@rx ^/api/ics/(control|command)" \
    "id:7001,phase:2,t:none,chain"
SecRule REQUEST_BODY "@rx (?i:(?:exec|system|shell|cmd))" \
    "t:none,log,deny,status:403,msg:'Command Injection Attempt on ICS Endpoint'"

# Rules for file upload endpoints
SecRule REQUEST_URI "@rx ^/api/upload" \
    "id:8001,phase:1,t:none,pass,nolog,ctl:requestBodyProcessor=MULTIPART"

SecRule FILES_NAMES "@rx (?i:\.(php|jsp|asp|aspx|exe|dll|bat|cmd|sh|cgi|pl|py|rb)$)" \
    "id:8002,phase:2,t:none,t:lowercase,log,deny,status:403,msg:'Malicious File Upload Attempt'"

# Block potentially malicious file content
SecRule FILES_TMPNAMES "@inspectFile malicious_files.yara" \
    "id:8003,phase:2,t:none,log,deny,status:403,msg:'Malicious Content in Uploaded File'"

# Logging configuration
SecAuditEngine RelevantOnly
SecAuditLogRelevantStatus "^(?:5|4(?!04))"
SecAuditLogParts ABIJDEFHZ
SecAuditLogType Serial
SecAuditLog /var/log/modsec_audit.log

# Performance tuning
SecCollectionTimeout 600
SecStreamOutBodyInspection Off
SecConnEngine Off