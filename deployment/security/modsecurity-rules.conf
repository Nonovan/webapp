# ModSecurity Core Rule Set (CRS) configuration for Cloud Infrastructure Platform
# This file configures ModSecurity Web Application Firewall rules

# Basic setup
SecRuleEngine On
SecRequestBodyAccess On
SecResponseBodyAccess On
SecResponseBodyMimeType text/plain text/html text/xml application/json application/javascript
SecResponseBodyLimit 1048576

# Server identification masking
SecServerSignature "Server"

# Default action settings
SecDefaultAction "phase:1,log,auditlog,deny,status:403"

# Audit logging configuration
SecAuditEngine RelevantOnly
SecAuditLogRelevantStatus "^(?:5|4(?!04))"
SecAuditLogParts ABIJDEFHZ
SecAuditLogType Serial
SecAuditLog /var/log/nginx/modsec_audit.log

# Request body limits
SecRequestBodyLimit 10485760
SecRequestBodyNoFilesLimit 131072
SecRequestBodyInMemoryLimit 131072

# File upload handling
SecUploadDir /tmp
SecUploadKeepFiles Off
SecUploadFileMode 0600

# Rule sets - Core Rule Set inclusion
Include /etc/nginx/modsecurity-crs/crs-setup.conf
Include /etc/nginx/modsecurity-crs/rules/*.conf

# Include Cloud Platform specific rules
Include /etc/nginx/modsecurity.d/waf-rules/sql-injection.conf
Include /etc/nginx/modsecurity.d/waf-rules/xss-protection.conf
Include /etc/nginx/modsecurity.d/waf-rules/path-traversal.conf
Include /etc/nginx/modsecurity.d/waf-rules/command-injection.conf
Include /etc/nginx/modsecurity.d/waf-rules/request-limits.conf
Include /etc/nginx/modsecurity.d/waf-rules/api-protection.conf
Include /etc/nginx/modsecurity.d/waf-rules/authentication.conf
Include /etc/nginx/modsecurity.d/waf-rules/file-upload.conf
Include /etc/nginx/modsecurity.d/waf-rules/sensitive-data.conf
Include /etc/nginx/modsecurity.d/waf-rules/generic-attacks.conf
Include /etc/nginx/modsecurity.d/waf-rules/ip-reputation.conf
Include /etc/nginx/modsecurity.d/waf-rules/ics-protection.conf

# Custom rules for Cloud Infrastructure Platform

# Block common web attacks
SecRule REQUEST_URI "@rx (?:\.{2}[\\/]){1,}" \
    "id:1001,\
    phase:1,\
    t:none,t:urlDecodeUni,t:normalizePathWin,\
    log,deny,\
    status:403,\
    msg:'Directory Traversal Attack',\
    severity:'CRITICAL',\
    tag:'application-multi',\
    tag:'attack-lfi'"

SecRule REQUEST_HEADERS:User-Agent "@pmFromFile /etc/nginx/modsecurity.d/waf-rules/malicious-user-agents.txt" \
    "id:1002,\
    phase:1,\
    t:none,t:lowercase,\
    log,deny,\
    status:403,\
    msg:'Malicious User Agent',\
    severity:'CRITICAL',\
    tag:'application-multi',\
    tag:'platform-multi',\
    tag:'attack-reputation-scanner'"

# Block sensitive file access
SecRule REQUEST_URI "@rx (?:/\.env|/\.git/|/\.svn/|/\.htaccess|/wp-config\.php|/config\.php|/database\.yml)" \
    "id:1003,\
    phase:1,\
    t:none,t:lowercase,t:normalizePath,\
    log,deny,\
    status:403,\
    msg:'Sensitive File Access Attempt',\
    severity:'CRITICAL',\
    tag:'application-multi',\
    tag:'attack-disclosure'"

# Exception for monitoring endpoints
SecRule REQUEST_URI "@beginsWith /health" \
    "id:1100,\
    phase:1,\
    t:none,\
    pass,nolog,\
    ctl:ruleRemoveById=1001-1099,\
    ctl:ruleRemoveByTag=OWASP_CRS"

# Exception for API endpoints that need to handle special characters
SecRule REQUEST_URI "@beginsWith /api/cloud/" \
    "id:1101,\
    phase:1,\
    t:none,\
    pass,nolog,\
    ctl:ruleRemoveById=942100-942999,\
    ctl:ruleRemoveByTag=attack-sqli"

# Temporary brute force protection - block IPs with too many 403s
SecAction \
    "id:1200,\
    phase:1,\
    nolog,\
    pass,\
    initcol:ip=%{REMOTE_ADDR},\
    setvar:ip.block_403_counter=0,\
    setvar:ip.block_time_403=0"

SecRule RESPONSE_STATUS "@eq 403" \
    "id:1201,\
    phase:5,\
    t:none,\
    nolog,\
    pass,\
    setvar:ip.block_403_counter=+1,\
    expirevar:ip.block_403_counter=3600"

SecRule IP:BLOCK_403_COUNTER "@gt 20" \
    "id:1202,\
    phase:1,\
    t:none,\
    log,deny,\
    status:403,\
    msg:'Potential brute force attack',\
    setvar:ip.block_time_403=%{TIME_EPOCH},\
    expirevar:ip.block_time_403=300,\
    severity:'CRITICAL',\
    tag:'application-multi',\
    tag:'attack-reputation-scanner'"

# Persistent XSS protection
SecRule ARGS|ARGS_NAMES|REQUEST_HEADERS|REQUEST_HEADERS_NAMES|XML:/*|XML://@* "@detectXSS" \
    "id:1300,\
    phase:2,\
    t:none,t:urlDecodeUni,t:htmlEntityDecode,\
    log,deny,\
    status:403,\
    msg:'XSS Attack Detected',\
    severity:'CRITICAL',\
    tag:'application-multi',\
    tag:'attack-xss'"

# Content-Type header verification
SecRule REQUEST_METHOD "!@rx ^(?:GET|HEAD)$" \
    "chain,\
    id:1400,\
    phase:1,\
    t:none,\
    log,deny,\
    status:400,\
    msg:'Content-Type header missing',\
    severity:'WARNING'"
    SecRule &REQUEST_HEADERS:Content-Type "@eq 0"

# Ensure proper TLS protocols in headers
SecRule REQUEST_HEADERS:X-Forwarded-Proto "!@streq https" \
    "id:1500,\
    phase:1,\
    t:none,\
    log,deny,\
    status:400,\
    msg:'HTTPS Protocol Required',\
    skipAfter:END_HTTPS_CHECK,\
    severity:'WARNING',\
    tag:'application-multi',\
    tag:'platform-multi',\
    tag:'attack-protocol'"

SecMarker END_HTTPS_CHECK

# Performance optimizations
SecCollectionTimeout 600
SecRequestBodyAccess On
SecResponseBodyAccess On