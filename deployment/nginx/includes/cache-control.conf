# Cache Control Configuration for Cloud Infrastructure Platform
# Include this file in location blocks to implement appropriate caching policies

# Define cache-control based on file type
map $sent_http_content_type $cache_control {
    default                           "no-store, no-cache, must-revalidate";
    
    # Cache static assets aggressively
    text/css                          "public, max-age=31536000, immutable";
    text/javascript                   "public, max-age=31536000, immutable";
    application/javascript            "public, max-age=31536000, immutable";
    
    # Cache images aggressively
    image/svg+xml                     "public, max-age=31536000, immutable";
    image/webp                        "public, max-age=31536000, immutable";
    image/png                         "public, max-age=31536000, immutable";
    image/jpeg                        "public, max-age=31536000, immutable";
    image/gif                         "public, max-age=31536000, immutable";
    image/x-icon                      "public, max-age=31536000, immutable";
    image/vnd.microsoft.icon          "public, max-age=31536000, immutable";
    
    # Cache fonts aggressively
    font/woff                         "public, max-age=31536000, immutable";
    font/woff2                        "public, max-age=31536000, immutable";
    application/font-woff             "public, max-age=31536000, immutable";
    application/font-woff2            "public, max-age=31536000, immutable";
    
    # Cache HTML briefly
    text/html                         "public, max-age=900";
    
    # API responses - do not cache by default
    application/json                  "no-store, no-cache, must-revalidate";
    application/xml                   "no-store, no-cache, must-revalidate";
}

# Define cache-control based on URI patterns
map $request_uri $uri_cache_control {
    default                          "";
    
    # Never cache these URIs regardless of content type
    ~*^/api/                         "no-store, no-cache, must-revalidate";
    ~*^/admin/                       "no-store, no-cache, must-revalidate, private";
    ~*^/auth/                        "no-store, no-cache, must-revalidate, private";
    
    # Cache static assets with versioning parameter (e.g. ?v=123)
    ~*\.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2)(\?v=.+)$   "public, max-age=31536000, immutable";
}

# Combined map to determine final cache-control header value
map $uri_cache_control $final_cache_control {
    # If URI-based mapping is empty, use content-type based mapping
    ""      $cache_control;
    
    # Otherwise, use URI-based mapping
    default $uri_cache_control;
}

# Add appropriate Cache-Control header
add_header Cache-Control $final_cache_control always;

# Add Vary header for proper cache variation
add_header Vary "Accept-Encoding" always;

# Prevent browsers from incorrectly detecting non-scripts as scripts
add_header X-Content-Type-Options "nosniff" always;

# Define browser caching for different location blocks
# Include this in the http or server context
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=24h max_size=1g;

# Example usage in a location block:
# location /static/ {
#     proxy_cache STATIC;
#     proxy_ignore_headers Cache-Control;
#     proxy_cache_valid 200 302 24h;
#     proxy_cache_valid 404 1m;
#     proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
#     proxy_cache_background_update on;
#     proxy_cache_lock on;
# }