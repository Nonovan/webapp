# CORS Headers Configuration for Cloud Infrastructure Platform
# Include this file in location blocks that need CORS support

# Define allowed origins based on environment
map $http_origin $allow_origin {
    default                                 "";
    "~^https?://localhost(:[0-9]+)?"        $http_origin;  # Development
    "~^https?://127.0.0.1(:[0-9]+)?"        $http_origin;  # Development
    "~^https?://cloud-platform\.example\.com$"  $http_origin;  # Production
    "~^https?://staging\.cloud-platform\.example\.com$" $http_origin;  # Staging
    # Add additional trusted domains as needed
}

# Set CORS headers
add_header Access-Control-Allow-Origin $allow_origin always;
add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, Origin, User-Agent, DNT, Cache-Control, X-Requested-With, X-API-Key, X-Request-ID" always;
add_header Access-Control-Allow-Credentials "true" always;
add_header Access-Control-Max-Age "3600" always;
add_header Access-Control-Expose-Headers "Content-Length, Content-Range" always;

# Handle preflight requests
if ($request_method = 'OPTIONS') {
    # Return 204 No Content for OPTIONS requests
    add_header Access-Control-Allow-Origin $allow_origin;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH";
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, Origin, User-Agent, DNT, Cache-Control, X-Requested-With, X-API-Key, X-Request-ID";
    add_header Access-Control-Allow-Credentials "true";
    add_header Access-Control-Max-Age "3600";
    add_header Content-Type "text/plain charset=UTF-8";
    add_header Content-Length "0";
    return 204;
}

# Set Vary header to avoid cache issues
add_header Vary "Origin" always;

# Usage examples:
#
# location /api/ {
#     include includes/cors-headers.conf;
#     proxy_pass http://backend_api;
# }