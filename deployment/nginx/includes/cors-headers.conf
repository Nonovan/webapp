# CORS Headers Configuration for Cloud Infrastructure Platform
# Include this file in location blocks that need CORS support

# Define allowed origins based on environment
map $http_origin $allow_origin {
    default                                 "";
    "~^https?://localhost(:[0-9]+)?"        $http_origin;  # Development
    "~^https?://127.0.0.1(:[0-9]+)?"        $http_origin;  # Development
    "~^https?://cloud-platform\.example\.com$"  $http_origin;  # Production
    "~^https?://staging\.cloud-platform\.example\.com$" $http_origin;  # Staging
    "~^https?://dev\.cloud-platform\.example\.com$" $http_origin;  # Development environment
    # Add additional trusted domains as needed
}

# Special handling for preflight requests
if ($request_method = 'OPTIONS') {
    add_header 'Access-Control-Allow-Origin' $allow_origin;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH';
    add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, User-Agent, DNT, Cache-Control, X-Requested-With, X-API-Key, X-Request-ID, X-CSRF-Token';
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Max-Age' '3600';
    add_header 'Content-Type' 'text/plain charset=UTF-8';
    add_header 'Content-Length' '0';
    return 204;
}

# Set CORS headers for non-OPTIONS requests
add_header 'Access-Control-Allow-Origin' $allow_origin always;
add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, User-Agent, DNT, Cache-Control, X-Requested-With, X-API-Key, X-Request-ID, X-CSRF-Token' always;
add_header 'Access-Control-Allow-Credentials' 'true' always;
add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range, X-RateLimit-Limit, X-RateLimit-Remaining' always;

# Set Vary header to ensure proper caching based on Origin
add_header 'Vary' 'Origin' always;

# Usage examples:
#
# location /api/ {
#     include includes/cors-headers.conf;
#     proxy_pass http://backend_api;
# }
#
# Note: This configuration should be included *inside* location blocks
# that need CORS support, not at the server level.