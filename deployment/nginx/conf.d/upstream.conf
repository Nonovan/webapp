# Upstream Configuration for Cloud Infrastructure Platform
# This file defines backend server groups for load balancing and failover

# API backend servers
upstream backend_api {
    # Use IP hash for session persistence
    ip_hash;
    
    # Main API servers
    server 10.0.1.10:5000 max_fails=3 fail_timeout=30s;
    server 10.0.1.11:5000 max_fails=3 fail_timeout=30s;
    
    # Backup server that only receives traffic if others fail
    server 10.0.1.12:5000 backup;
    
    # Keepalive connections for better performance
    keepalive 32;
    keepalive_timeout 60s;
    
    # Health check parameters
    # Requires NGINX Plus
    # health_check interval=10s fails=3 passes=2;
}

# WebSocket backend servers
upstream websocket_backend {
    # Use least connections for WebSockets
    least_conn;
    
    server 10.0.1.20:5001 max_fails=3 fail_timeout=30s;
    server 10.0.1.21:5001 max_fails=3 fail_timeout=30s;
    
    # Keepalive connections are essential for WebSockets
    keepalive 64;
    keepalive_timeout 300s;
}

# Monitoring backend
upstream monitoring_backend {
    # Use round-robin distribution (default)
    server 10.0.2.10:8080 weight=2 max_fails=2 fail_timeout=10s;
    server 10.0.2.11:8080 weight=1;
    
    # Keepalive connections
    keepalive 16;
    keepalive_timeout 60s;
}

# Industrial Control Systems (ICS) backend servers
# These have special handling due to longer operations
upstream ics_backend {
    server 10.0.3.10:7000 max_fails=2 fail_timeout=60s;
    server 10.0.3.11:7000 max_fails=2 fail_timeout=60s backup;
    
    # Use longer keepalive for ICS operations
    keepalive 16;
    keepalive_timeout 300s;
}

# Static content servers (if served separately)
upstream static_backend {
    server 10.0.4.10:80 max_fails=3 fail_timeout=30s;
    server 10.0.4.11:80 max_fails=3 fail_timeout=30s;
    
    # Cache static content with keepalive
    keepalive 64;
    keepalive_timeout 60s;
}

# Authentication service backends
upstream auth_backend {
    # Use sticky sessions for auth
    sticky cookie srv_id expires=1h path=/;
    
    server 10.0.5.10:5000 max_fails=3 fail_timeout=10s;
    server 10.0.5.11:5000 max_fails=3 fail_timeout=10s;
    
    # Auth service keepalive
    keepalive 32;
    keepalive_timeout 60s;
    
    # Zone for runtime state persistence
    zone auth_service 64k;
}

# Development environment backend (for local development)
upstream dev_backend {
    server 127.0.0.1:5000;
    
    # Development-specific settings
    keepalive 8;
    keepalive_timeout 60s;
}

# Disaster recovery backends (used when primary datacenter is down)
upstream dr_backend {
    server 192.168.1.10:5000 max_fails=3 fail_timeout=30s;
    server 192.168.1.11:5000 max_fails=3 fail_timeout=30s;
    
    # DR keepalive settings
    keepalive 32;
    keepalive_timeout 60s;
}

# Real-time data processing backend
upstream realtime_backend {
    # Use consistent hashing for real-time data processing
    hash $remote_addr consistent;
    
    server 10.0.6.10:9000 max_fails=3 fail_timeout=20s;
    server 10.0.6.11:9000 max_fails=3 fail_timeout=20s;
    server 10.0.6.12:9000 max_fails=3 fail_timeout=20s;
    
    # Real-time processing needs higher keepalive
    keepalive 128;
    keepalive_timeout 180s;
}

# Queue processing backend
upstream queue_backend {
    # Use least time method for queue processing (NGINX Plus feature)
    # least_time header; # Uncomment for NGINX Plus
    
    # For open source NGINX, use least connections instead
    least_conn;
    
    server 10.0.7.10:8000 max_fails=3 fail_timeout=30s;
    server 10.0.7.11:8000 max_fails=3 fail_timeout=30s;
    
    # Queue processing keepalive
    keepalive 32;
    keepalive_timeout 120s;
}