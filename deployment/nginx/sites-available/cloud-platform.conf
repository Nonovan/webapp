# Production Server Configuration for Cloud Infrastructure Platform
# Place in /deployment/nginx/sites-available/

# HTTP server block - redirects to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name cloud-platform.example.com www.cloud-platform.example.com;
    server_tokens off;

    # Redirect all HTTP to HTTPS with 301 (permanent) redirect
    location / {
        return 301 https://$host$request_uri;
    }

    # Allow Let's Encrypt validation
    location /.well-known/acme-challenge/ {
        root /var/www/html;
        allow all;
    }
}

# HTTPS server block - main application server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name cloud-platform.example.com www.cloud-platform.example.com;
    
    # Document root location
    root /var/www/cloud-platform/public;
    index index.html;
    
    # SSL configuration using shared config
    include conf.d/ssl.conf;
    
    # Security headers
    include conf.d/security-headers.conf;
    
    # Hide NGINX version
    server_tokens off;
    
    # Main application location block
    location / {
        try_files $uri $uri/ /index.html;
        
        # Basic security headers for all responses
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
    }

    # Static files with cache control
    location /static/ {
        alias /var/www/cloud-platform/static/;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        add_header X-Content-Type-Options "nosniff" always;
        
        # Disable directory listing
        autoindex off;
    }
    
    # Uploads directory with restricted access
    location /uploads/ {
        alias /var/www/cloud-platform/uploads/;
        
        # Prevent direct access to sensitive file types
        location ~ \.(php|py|pl|sh|env|ini)$ {
            deny all;
            return 404;
        }
    }

    # API endpoint configuration
    location /api/ {
        proxy_pass http://127.0.0.1:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeout settings
        proxy_read_timeout 90s;
        proxy_connect_timeout 90s;
        
        # Security headers for API
        proxy_hide_header X-Powered-By;
        add_header X-Content-Type-Options "nosniff" always;
    }
    
    # WebSocket configuration
    location /api/ws {
        proxy_pass http://127.0.0.1:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_read_timeout 3600s;
    }

    # Monitoring endpoints
    location /health {
        proxy_pass http://127.0.0.1:5000/api/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Deny access to sensitive files and directories
    location ~ /\. {
        deny all;
        return 404;
    }
    
    # Deny access to configuration files
    location ~* \.(env|config|ini|conf|md|sql|log|yml|yaml|sample)$ {
        deny all;
        return 404;
    }

    # Custom error pages
    error_page 404 /404.html;
    location = /404.html {
        root /var/www/cloud-platform/static/error;
        internal;
    }
    
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /var/www/cloud-platform/static/error;
        internal;
    }
    
    # Set client body size limits
    client_max_body_size 16M;
    
    # SSL parameters
    ssl_certificate /etc/ssl/certs/cloud-platform.crt;
    ssl_certificate_key /etc/ssl/private/cloud-platform.key;
    
    # Logging configuration
    access_log /var/log/nginx/cloud-platform-access.log;
    error_log /var/log/nginx/cloud-platform-error.log;

    # Enable ModSecurity WAF if available
    include conf.d/modsecurity.conf;
}