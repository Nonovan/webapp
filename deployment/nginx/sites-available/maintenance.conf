# Maintenance Mode Configuration for Cloud Infrastructure Platform
# Place in /deployment/nginx/sites-available/
# To enable maintenance mode, simply create a symlink to this file in sites-enabled

# HTTP server block - redirects to HTTPS
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name cloud-platform.example.com www.cloud-platform.example.com;
    
    # Hide NGINX version
    server_tokens off;

    # Redirect all HTTP to HTTPS with 301 (permanent) redirect
    location / {
        return 301 https://$host$request_uri;
    }

    # Allow Let's Encrypt validation
    location /.well-known/acme-challenge/ {
        root /var/www/html;
        allow all;
    }
}

# HTTPS server block - maintenance page
server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;
    server_name cloud-platform.example.com www.cloud-platform.example.com;
    
    # Document root location
    root /var/www/cloud-platform/maintenance;
    index maintenance.html index.html;
    
    # SSL configuration using shared config
    include conf.d/ssl.conf;
    
    # Security headers
    include conf.d/security-headers.conf;
    
    # Hide NGINX version
    server_tokens off;
    
    # Set maintenance mode environment variable for tracking
    set $maintenance_mode "active";

    # Deliver maintenance page for most requests
    location / {
        try_files $uri $uri/ /maintenance.html =503;
    }
    
    # Serve static assets for maintenance page
    location /static/ {
        alias /var/www/cloud-platform/maintenance/assets/;
        access_log off;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
    }
    
    # Allow access to health check endpoint (for monitoring systems)
    location /health {
        return 503 '{"status":"maintenance","message":"System is currently undergoing maintenance","estimated_completion":"$MAINTENANCE_END_TIME"}';
        add_header Content-Type application/json;
        
        # Return 503 Service Unavailable
        add_header Retry-After 1800;  # Retry after 30 minutes
    }
    
    # Whitelist for emergency access
    # This checks for a special header or IP addresses that should bypass maintenance
    location /api/admin {
        # Allow access from trusted IPs
        allow 10.0.0.0/8;        # Internal network
        allow 192.168.10.0/24;   # Management network
        allow 127.0.0.1;         # Local access
        deny all;                # Deny everyone else
        
        # Pass through to backend
        proxy_pass http://backend_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Special header for emergency access
        if ($http_x_maintenance_bypass != "$MAINTENANCE_SECRET_TOKEN") {
            return 503;
        }
    }

    # Prevent access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Custom error page for maintenance mode
    error_page 503 /maintenance.html;
    location = /maintenance.html {
        internal;
        root /var/www/cloud-platform/maintenance;
    }
    
    # SSL parameters - fallback if ssl.conf is missing
    ssl_certificate /etc/ssl/certs/cloud-platform.crt;
    ssl_certificate_key /etc/ssl/private/cloud-platform.key;
    
    # Logging configuration
    access_log /var/log/nginx/maintenance-access.log combined;
    error_log /var/log/nginx/maintenance-error.log warn;
}